#include <iostream>
#include <stdio.h>      /* printf, scanf, NULL */
#include <stdlib.h> 

using namespace std;

struct Node 
{ 
  int data; 
  struct Node *next; 
}; 

void fun1(struct Node* head);
void push(struct Node** head_ref, int new_data) ;
void fun2(struct Node* start) ;


int main() 
{ 
  /* Start with the empty list */
  struct Node* head = NULL; 
  
  /* Using push() to construct below list 
    1->2->3->4->5  */
  push(&head, 5); 
  push(&head, 4); 
  push(&head, 3); 
  push(&head, 2); 
  push(&head, 1);    
   
 printf("\n Output of fun1() for list 1->2->3->4->5 \n"); 
  fun1(head); 
  
  printf("\n Output of fun2() for list 1->2->3->4->5 \n");  
  fun2(head); 
          
  //getch//ar(); 
  return 0; 
} 



void fun1(struct Node* head) 
{ 
  if(head == NULL) {
      cout << "I am where it said return " << endl;
    return; 
    }
   
  fun1(head->next); 
   printf("%d  ", head->data); 
} 

void push(struct Node** head_ref, int new_data) 
{ 
  /* allocate node */
  struct Node* new_node = 
          (struct Node*) malloc(sizeof(struct Node)); 
   
  /* put in the data  */
  new_node->data  = new_data; 
   
  /* link the old list off the new node */
  new_node->next = (*head_ref); 
   
  /* move the head to point to the new node */
  (*head_ref)    = new_node; 
} 
   
/* Drier program to test above functions */



void fun2(struct Node* start) 
{ 
  if(start == NULL) 
    return; 
  printf("%d  ", start->data);  
  
  if(start->next != NULL ) 
    fun2(start->next->next); 
  printf("%d  ", start->data); 
} 



